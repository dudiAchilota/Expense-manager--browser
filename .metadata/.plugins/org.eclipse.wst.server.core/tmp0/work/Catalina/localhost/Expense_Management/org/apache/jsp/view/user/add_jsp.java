/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2022-03-06 21:35:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import il.ac.hit.expensemanagement.controller.Utils;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("il.ac.hit.expensemanagement.controller.Utils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=windows-1255");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://code.jquery.com/mobile/1.4.3/jquery.mobile-1.4.3.min.css\"/>\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("    <script src=\"https://code.jquery.com/mobile/1.4.3/jquery.mobile-1.4.3.min.js\"></script>\r\n");
      out.write("    <meta charset=\"windows-1255\">\r\n");
      out.write("\r\n");
      out.write("    <title>add</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div data-role=\"page\" id=\"home\">\r\n");
      out.write("    ");
 Utils.ifHaveUser(request, response);
      out.write("\r\n");
      out.write("    <div data-role=\"header\">\r\n");
      out.write("        <h1>Add cost item</h1>\r\n");
      out.write("        <h2>");
      out.print( "Hello " + request.getSession().getAttribute("user"));
      out.write("\r\n");
      out.write("        </h2>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <form method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/router/user/add\">\r\n");
      out.write("        <div data-role=\"content\" data-theme=\"a\">\r\n");
      out.write("\r\n");
      out.write("            <div data-role=\"fieldcontain\">\r\n");
      out.write("                <label>sum:</label>\r\n");
      out.write("                <input type=\"number\" name=\"sum\" id=\"sum\" placeholder=\"Sum input\" step=\"0.01\"/>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div data-role=\"fieldcontain\">\r\n");
      out.write("                <label for=\"category\" class=\"select\">category:</label>\r\n");
      out.write("                <select name=\"category\" id=\"category\" data-native-menu=\"false\">\r\n");
      out.write("                    <option value=\"\">select category</option>\r\n");
      out.write("                    <option value=\"Food\">Food</option>\r\n");
      out.write("                    <option value=\"Education\">Education</option>\r\n");
      out.write("                    <option value=\"Travel\">Travel</option>\r\n");
      out.write("                    <option value=\"House\">House</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div data-role=\"fieldcontain\">\r\n");
      out.write("                <label for=\"description\">description:</label>\r\n");
      out.write("                <input id=\"description\" type=\"text\" name=\"description\" placeholder=\"Text input\"\r\n");
      out.write("                       style=\"font-family: David\"/>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div data-role=\"fieldcontain\">\r\n");
      out.write("                <label for=\"date\">Date:</label>\r\n");
      out.write("                <input id=\"date\" type=\"date\" name=\"date\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <script>\r\n");
      out.write("                function restart() {\r\n");
      out.write("                    document.getElementById(\"sum\").value = \"\";\r\n");
      out.write("                    document.getElementById(\"category\").value = \"\";\r\n");
      out.write("                    document.getElementById(\"description\").value = \"\";\r\n");
      out.write("                    document.getElementById(\"date\").value = \"\";\r\n");
      out.write("                }\r\n");
      out.write("            </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div data-role=\"controlgroup\" data-type=\"horizontal\" data-mini=\"true\" style=\"text-align: center\">\r\n");
      out.write("            <input type=\"submit\" value=\"add\">\r\n");
      out.write("            <a onclick=\"restart()\" href=\"#\" data-role=\"button\" data-icon=\"delete\" data-theme=\"b\">restart</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    ");

        String mes = (String) request.getAttribute("mes");
        if (mes != null) {
    
      out.write("\r\n");
      out.write("    <h1 style=\"align-items: center\">");
      out.print( mes );
      out.write("\r\n");
      out.write("    </h1>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div data-role=\"footer\">\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/router/user/items\"\r\n");
      out.write("           data-role=\"button\" data-icon=\"grid\" data-theme=\"b\">table Items</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/router/user/add\"\r\n");
      out.write("           data-role=\"button\" data-icon=\"grid\" data-theme=\"b\">add</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/router/user/logout\"\r\n");
      out.write("           data-role=\"button\" data-icon=\"grid\" data-theme=\"b\">log-out</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");

        String xx = (String) request.getAttribute("username");
        if (xx != null) {
    
      out.write("\r\n");
      out.write("    <h1 style=\"align-items: center\">");
      out.print( xx );
      out.write("\r\n");
      out.write("    </h1>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");

        if (request.getSession().getAttribute("user") == null) {
            request.getRequestDispatcher("/view/user/login.jsp").forward(request, response);
        }
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
